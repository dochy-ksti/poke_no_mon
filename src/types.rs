use crate::pnum::PNum;


#[repr(usize)]
#[derive(Debug, PartialEq, Eq, Clone, Copy, Hash)]
pub enum Types{
	無,
	炎,
	水,
	電,
	草,
	氷,
	格,
	毒,
	地,
	飛,
	超,
	虫,
	岩,
	霊,
	竜,
	悪,
	鋼,
	妖,
}

impl Types{
	const E : [[u8; 18]; 18] =
	[
	//  無,炎水電草,氷格毒地飛,超虫岩霊竜,悪鋼妖
		[2,2,2,2,2,2,2,2,2,2,2,2,1,0,2,2,1,2],
		[2,1,1,2,3,3,2,2,2,2,2,3,1,2,1,2,3,2],
		[2,3,1,2,1,2,2,2,3,2,2,2,3,2,1,2,2,2],
		[2,2,3,1,1,2,2,2,0,3,2,2,2,2,1,2,2,2],
		[2,1,3,2,1,2,2,1,3,1,2,1,3,2,1,2,1,2],
		[2,1,1,2,3,1,2,2,3,3,2,2,2,2,3,2,1,2],
		[3,2,2,2,2,3,2,1,2,1,1,1,3,0,2,3,3,1],
		[2,2,2,2,3,2,2,1,1,2,2,2,1,1,2,2,0,3],
		[2,3,2,3,1,2,2,3,2,0,2,1,3,2,2,2,3,2],
		[2,2,2,1,3,2,3,2,2,2,2,3,1,2,2,2,1,2],
		[2,2,2,2,2,2,3,3,2,2,1,2,2,2,2,0,1,2],
		[2,1,2,2,3,2,1,1,2,1,3,2,2,1,2,3,1,1],
		[2,3,2,2,2,3,1,2,1,3,2,3,2,2,2,2,1,2],
		[0,2,2,2,2,2,2,2,2,2,3,2,2,3,2,1,2,2],
		[2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,1,0],
		[2,2,2,2,2,2,1,2,2,2,3,2,2,3,2,1,2,1],
		[2,1,1,1,2,3,2,2,2,2,2,2,3,2,2,2,1,3],
		[2,1,2,2,2,2,3,1,2,2,2,2,2,2,3,3,1,2],
	];
	pub fn effectiveness(&self, def_type : Types) -> PNum{
		let n = Self::E[*self as usize][def_type as usize];
		match n{
			0 => PNum::V0,
			1 => PNum::V0_5,
			2 => PNum::V1,
			3 => PNum::V2,
			_ => unreachable!(),
		}
	}
}